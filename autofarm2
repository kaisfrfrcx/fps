local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "KAIS | AUTOF | PREMIUM",
   Icon = nil, -- No icon
   LoadingTitle = "Loading..",
   LoadingSubtitle = "By | Treys_son",
   Theme = "light",
      
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,

   ConfigurationSaving = {
      Enabled = False,
      FolderName = "YellowBlackThemeHub",
      FileName = "BigHub"
   },

   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },

KeySystem = nil, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {},
   }
})

-- Values

_G.autoTap = true


-- Functions

 function autoTap()
    while _G.autoTap == true do
    task.wait(0.1)
      game:GetService("ReplicatedStorage").Events.Click4:FireServer()
    end
   end
   
-- Tabs
local AutoTab = Window:CreateTab("Auto Click", 4483362458) -- Title, Image 

-- Sections
local AutoSection = AutoTab:CreateSection("Auto tap")   

-- Toggles
local AutoToggle = AutoTab:CreateToggle({
   Name = "Auto Tap",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
       _G.autoTap = Value
      autoTap()
   end,
})
    
